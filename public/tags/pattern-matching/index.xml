<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pattern-Matching on QuickRef - Personal Developer Reference</title>
    <link>https://qref.eknath.dev/tags/pattern-matching/</link>
    <description>Recent content in Pattern-Matching on QuickRef - Personal Developer Reference</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://qref.eknath.dev/tags/pattern-matching/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Regex</title>
      <link>https://qref.eknath.dev/tools/regex/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://qref.eknath.dev/tools/regex/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;Regular expressions (regex) are patterns used to match character combinations in strings. They&amp;rsquo;re essential for text processing, validation, searching, and data extraction across virtually all programming languages and tools.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;&#xA;&lt;h3 id=&#34;literal-characters&#34;&gt;Literal Characters&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;hello       # Matches &amp;#34;hello&amp;#34; exactly&#xA;123         # Matches &amp;#34;123&amp;#34; exactly&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;meta-characters&#34;&gt;Meta Characters&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;.           # Any character except newline&#xA;^           # Start of string/line&#xA;$           # End of string/line&#xA;\           # Escape character&#xA;|           # OR operator&#xA;()          # Group&#xA;[]          # Character class&#xA;{}          # Quantifier&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;character-classes&#34;&gt;Character Classes&lt;/h2&gt;&#xA;&lt;h3 id=&#34;predefined-classes&#34;&gt;Predefined Classes&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;.           # Any character except newline&#xA;\d          # Any digit (0-9)&#xA;\D          # Any non-digit&#xA;\w          # Any word character (a-z, A-Z, 0-9, _)&#xA;\W          # Any non-word character&#xA;\s          # Any whitespace character&#xA;\S          # Any non-whitespace character&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;custom-classes&#34;&gt;Custom Classes&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;[abc]       # Any of a, b, or c&#xA;[a-z]       # Any lowercase letter&#xA;[A-Z]       # Any uppercase letter&#xA;[0-9]       # Any digit&#xA;[^abc]      # Any character except a, b, or c&#xA;[a-zA-Z0-9] # Any alphanumeric character&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;quantifiers&#34;&gt;Quantifiers&lt;/h2&gt;&#xA;&lt;h3 id=&#34;basic-quantifiers&#34;&gt;Basic Quantifiers&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;*           # 0 or more&#xA;+           # 1 or more&#xA;?           # 0 or 1 (optional)&#xA;{n}         # Exactly n times&#xA;{n,}        # n or more times&#xA;{n,m}       # Between n and m times&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;a*          # &amp;#34;&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;aa&amp;#34;, &amp;#34;aaa&amp;#34;, ...&#xA;a+          # &amp;#34;a&amp;#34;, &amp;#34;aa&amp;#34;, &amp;#34;aaa&amp;#34;, ... (not empty)&#xA;a?          # &amp;#34;&amp;#34; or &amp;#34;a&amp;#34;&#xA;a{3}        # &amp;#34;aaa&amp;#34; exactly&#xA;a{2,4}      # &amp;#34;aa&amp;#34;, &amp;#34;aaa&amp;#34;, or &amp;#34;aaaa&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;anchors&#34;&gt;Anchors&lt;/h2&gt;&#xA;&lt;h3 id=&#34;position-anchors&#34;&gt;Position Anchors&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^           # Start of string/line&#xA;$           # End of string/line&#xA;\b          # Word boundary&#xA;\B          # Non-word boundary&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;examples-1&#34;&gt;Examples&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^hello      # &amp;#34;hello&amp;#34; at start of line&#xA;world$      # &amp;#34;world&amp;#34; at end of line&#xA;\bcat\b     # &amp;#34;cat&amp;#34; as whole word&#xA;\Bcat\B     # &amp;#34;cat&amp;#34; not as whole word&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;groups-and-capturing&#34;&gt;Groups and Capturing&lt;/h2&gt;&#xA;&lt;h3 id=&#34;groups&#34;&gt;Groups&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;(abc)       # Capture group&#xA;(?:abc)     # Non-capturing group&#xA;(?P&amp;lt;name&amp;gt;abc) # Named group (Python)&#xA;(?&amp;lt;name&amp;gt;abc)  # Named group (C#, Java)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;backreferences&#34;&gt;Backreferences&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;(cat)\1     # Matches &amp;#34;catcat&amp;#34;&#xA;(\w+)\s+\1  # Matches repeated words&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;common-patterns&#34;&gt;Common Patterns&lt;/h2&gt;&#xA;&lt;h3 id=&#34;email-validation&#34;&gt;Email Validation&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;phone-numbers&#34;&gt;Phone Numbers&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^\+?1?[-.\s]?\(?[0-9]{3}\)?[-.\s]?[0-9]{3}[-.\s]?[0-9]{4}$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;urls&#34;&gt;URLs&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&amp;amp;//=]*)$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;ipv4-address&#34;&gt;IPv4 Address&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;date-formats&#34;&gt;Date Formats&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;# MM/DD/YYYY&#xA;^(0[1-9]|1[0-2])\/(0[1-9]|[12][0-9]|3[01])\/\d{4}$&#xA;&#xA;# YYYY-MM-DD&#xA;^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;credit-card-numbers&#34;&gt;Credit Card Numbers&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;# Visa&#xA;^4[0-9]{12}(?:[0-9]{3})?$&#xA;&#xA;# MasterCard&#xA;^5[1-5][0-9]{14}$&#xA;&#xA;# American Express&#xA;^3[47][0-9]{13}$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;language-specific-usage&#34;&gt;Language-Specific Usage&lt;/h2&gt;&#xA;&lt;h3 id=&#34;javascript&#34;&gt;JavaScript&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;// Create regex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;const&lt;/span&gt; regex &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f85149&#34;&gt;/pattern/flags;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;const&lt;/span&gt; regex &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;new&lt;/span&gt; RegExp(&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;flags&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;// Test match&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;&lt;/span&gt;regex.test(string);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;// Find matches&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;&lt;/span&gt;string.match(regex);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string.search(regex);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string.replace(regex, replacement);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;re&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Compile regex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pattern &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#79c0ff&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;regex_pattern&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Match functions&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;re&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;match&lt;/span&gt;(pattern, string)    &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Match at beginning&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;re&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;.&lt;/span&gt;search(pattern, string)   &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Find first match&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;re&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;.&lt;/span&gt;findall(pattern, string)  &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Find all matches&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;re&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;.&lt;/span&gt;sub(pattern, replacement, string)  &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Replace&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;bashgrep&#34;&gt;Bash/grep&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Basic grep&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt; file.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Extended regex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -E &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt; file.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;egrep &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt; file.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Perl-compatible regex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -P &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt; file.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sed&#34;&gt;sed&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Replace with regex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;s/pattern/replacement/g&amp;#39;&lt;/span&gt; file.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Extended regex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -E &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;s/pattern/replacement/g&amp;#39;&lt;/span&gt; file.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;flagsmodifiers&#34;&gt;Flags/Modifiers&lt;/h2&gt;&#xA;&lt;h3 id=&#34;common-flags&#34;&gt;Common Flags&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;i           # Case insensitive&#xA;g           # Global (find all matches)&#xA;m           # Multiline (^ and $ match line breaks)&#xA;s           # Dot matches newline&#xA;x           # Extended (ignore whitespace)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;examples-2&#34;&gt;Examples&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;/hello/i&lt;/span&gt;        &lt;span style=&#34;color:#f85149&#34;&gt;#&lt;/span&gt; Case insensitive&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;/hello/g&lt;/span&gt;        &lt;span style=&#34;color:#f85149&#34;&gt;#&lt;/span&gt; Global search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;/hello/gi&lt;/span&gt;       &lt;span style=&#34;color:#f85149&#34;&gt;#&lt;/span&gt; Case insensitive &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;+&lt;/span&gt; global&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;advanced-features&#34;&gt;Advanced Features&lt;/h2&gt;&#xA;&lt;h3 id=&#34;lookaheadlookbehind&#34;&gt;Lookahead/Lookbehind&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;(?=pattern)     # Positive lookahead&#xA;(?!pattern)     # Negative lookahead&#xA;(?&amp;lt;=pattern)    # Positive lookbehind&#xA;(?&amp;lt;!pattern)    # Negative lookbehind&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;examples-3&#34;&gt;Examples&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;\d+(?=px)       # Numbers followed by &amp;#34;px&amp;#34;&#xA;\d+(?!px)       # Numbers not followed by &amp;#34;px&amp;#34;&#xA;(?&amp;lt;=\$)\d+      # Numbers preceded by &amp;#34;$&amp;#34;&#xA;(?&amp;lt;!\$)\d+      # Numbers not preceded by &amp;#34;$&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;practical-examples&#34;&gt;Practical Examples&lt;/h2&gt;&#xA;&lt;h3 id=&#34;extract-domain-from-email&#34;&gt;Extract Domain from Email&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;@([a-zA-Z0-9.-]+\.[a-zA-Z]{2,})&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;find-html-tags&#34;&gt;Find HTML Tags&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;&amp;lt;\/?[a-zA-Z][^&amp;gt;]*&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;match-quoted-strings&#34;&gt;Match Quoted Strings&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;&amp;#34;([^&amp;#34;\\]|\\.)*&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;find-css-colors&#34;&gt;Find CSS Colors&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;#[0-9a-fA-F]{3,6}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;extract-urls-from-text&#34;&gt;Extract URLs from Text&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;https?:\/\/[^\s]+&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;match-json-values&#34;&gt;Match JSON Values&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;&amp;#34;[^&amp;#34;]*&amp;#34;:\s*(&amp;#34;[^&amp;#34;]*&amp;#34;|\d+|true|false|null)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;testing-and-debugging&#34;&gt;Testing and Debugging&lt;/h2&gt;&#xA;&lt;h3 id=&#34;online-tools&#34;&gt;Online Tools&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://regex101.com&#34;&gt;regex101.com&lt;/a&gt; - Interactive regex tester&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://regexr.com&#34;&gt;regexr.com&lt;/a&gt; - Visual regex builder&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://regexpal.com&#34;&gt;regexpal.com&lt;/a&gt; - Simple regex tester&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;command-line-testing&#34;&gt;Command Line Testing&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Test with grep&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;test string&amp;#34;&lt;/span&gt; | grep -E &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Test with sed&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;test string&amp;#34;&lt;/span&gt; | sed &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;s/pattern/replacement/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Test with Python&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -c &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;import re; print(re.search(r&amp;#39;pattern&amp;#39;, &amp;#39;test string&amp;#39;))&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;performance-tips&#34;&gt;Performance Tips&lt;/h2&gt;&#xA;&lt;h3 id=&#34;best-practices&#34;&gt;Best Practices&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use specific characters instead of &lt;code&gt;.&lt;/code&gt; when possible&lt;/li&gt;&#xA;&lt;li&gt;Avoid nested quantifiers like &lt;code&gt;(a+)+&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Use non-capturing groups &lt;code&gt;(?:...)&lt;/code&gt; when you don&amp;rsquo;t need the match&lt;/li&gt;&#xA;&lt;li&gt;Anchor patterns with &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; when appropriate&lt;/li&gt;&#xA;&lt;li&gt;Use word boundaries &lt;code&gt;\b&lt;/code&gt; for word matching&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;common-pitfalls&#34;&gt;Common Pitfalls&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Greedy vs Non-greedy&lt;/strong&gt;: &lt;code&gt;.*&lt;/code&gt; vs &lt;code&gt;.*?&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt;: Avoid complex nested patterns&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Case sensitivity&lt;/strong&gt;: Remember to use &lt;code&gt;i&lt;/code&gt; flag when needed&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Escaping&lt;/strong&gt;: Don&amp;rsquo;t forget to escape special characters&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;quick-reference&#34;&gt;Quick Reference&lt;/h2&gt;&#xA;&lt;h3 id=&#34;most-common-patterns&#34;&gt;Most Common Patterns&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;\d+             # One or more digits&#xA;\w+             # One or more word characters&#xA;\s+             # One or more whitespace&#xA;[a-zA-Z]+       # One or more letters&#xA;\b\w+\b         # Whole words&#xA;^.+$            # Entire line&#xA;.*              # Any characters (greedy)&#xA;.*?             # Any characters (non-greedy)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;escape-sequences&#34;&gt;Escape Sequences&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;\.              # Literal dot&#xA;\*              # Literal asterisk&#xA;\+              # Literal plus&#xA;\?              # Literal question mark&#xA;\\              # Literal backslash&#xA;\(              # Literal parenthesis&#xA;\[              # Literal bracket&#xA;\{              # Literal brace&#xA;\|              # Literal pipe&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;man grep&lt;/code&gt; - Pattern matching in files&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;man sed&lt;/code&gt; - Stream editor with regex support&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;man awk&lt;/code&gt; - Pattern scanning and processing&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&#34;&gt;MDN Regex Guide&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/re.html&#34;&gt;Python re module&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
